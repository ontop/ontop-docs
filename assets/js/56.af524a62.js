(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{407:function(t,n,e){"use strict";e.r(n);var a=e(48),s=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"setting-up-an-ontop-sparql-endpoint-with-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-an-ontop-sparql-endpoint-with-docker"}},[t._v("#")]),t._v(" Setting up an Ontop SPARQL endpoint with Docker")]),t._v(" "),e("h2",{attrs:{id:"how-to-use-this-image"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use-this-image"}},[t._v("#")]),t._v(" How to use this image")]),t._v(" "),e("p",[t._v("The Docker image "),e("a",{attrs:{href:"https://hub.docker.com/r/ontop/ontop-endpoint",target:"_blank",rel:"noopener"}},[t._v("ontop/ontop-endpoint"),e("OutboundLink")],1),t._v(" is for fast setting up an Ontop SPARQL endpoint.\nOne can either use this image directly, or create a dedicated image based on this image.")]),t._v(" "),e("ol",[e("li",[t._v("Go to the "),e("code",[t._v("endpoint/")]),t._v(" directory. Alternatively, if you don't have already the tutorial files, you can download "),e("a",{attrs:{href:"input/university-complete.ttl"}},[t._v("this OWL ontology file")]),t._v(", "),e("a",{attrs:{href:"input/university-complete.obda"}},[t._v("this mapping file")]),t._v(", "),e("a",{attrs:{href:"input/university-complete.properties"}},[t._v("this properties file")]),t._v(" and paste them in "),e("code",[t._v("input/")]),t._v(".")]),t._v(" "),e("li",[t._v("Make sure to have the "),e("code",[t._v("jdbc/")]),t._v(" directory and the JDBC driver inside.")])]),t._v(" "),e("p",[t._v("In addition, we need the "),e("a",{attrs:{href:"../h2.zip"}},[t._v("h2 database")]),t._v(" as usual. Assume the h2 database is already running.")]),t._v(" "),e("p",[e("strong",[t._v("NB")]),t._v(": Linux users have to modify the property "),e("code",[t._v("jdbc.url")]),t._v(" in "),e("a",{attrs:{href:"input/university-complete.docker.properties"}},[e("code",[t._v("input/university-complete.docker.properties")])]),t._v(". Replace "),e("code",[t._v("host.docker.internal")]),t._v(" with the IP address of your machine (you can see it running the "),e("code",[t._v("ifconfig")]),t._v(" command).")]),t._v(" "),e("h3",{attrs:{id:"use-ontop-ontop-endpoint-directly"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#use-ontop-ontop-endpoint-directly"}},[t._v("#")]),t._v(" Use "),e("code",[t._v("ontop/ontop-endpoint")]),t._v(" directly")]),t._v(" "),e("p",[t._v("We can start an Ontop SPARQL endpoint by using the "),e("code",[t._v("ontop/ontop-endpoint")]),t._v(" image directly.\nOn Linux/Mac:")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker run --rm \\\n           -v $PWD/input:/opt/ontop/input \\\n           -v $PWD/jdbc:/opt/ontop/jdbc \\\n           -e ONTOP_ONTOLOGY_FILE=/opt/ontop/input/university-complete.ttl \\\n           -e ONTOP_MAPPING_FILE=/opt/ontop/input/university-complete.obda \\\n           -e ONTOP_PROPERTIES_FILE=/opt/ontop/input/university-complete.docker.properties \\\n           -p 8080:8080 \\\n           ontop/ontop-endpoint\n")])])]),e("p",[t._v("On Windows:")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker run --rm ^\n           -v %CD%/input:/opt/ontop/input ^\n           -v %CD%/jdbc:/opt/ontop/jdbc ^\n           -e ONTOP_ONTOLOGY_FILE=/opt/ontop/input/university-complete.ttl ^\n           -e ONTOP_MAPPING_FILE=/opt/ontop/input/university-complete.obda ^\n           -e ONTOP_PROPERTIES_FILE=/opt/ontop/input/university-complete.docker.properties ^\n           -p 8080:8080 ^\n           ontop/ontop-endpoint\n")])])]),e("p",[t._v("Now we can open "),e("a",{attrs:{href:"http://localhost:8080/",target:"_blank",rel:"noopener"}},[t._v("http://localhost:8080/"),e("OutboundLink")],1),t._v(" to test SPARQL queries.")]),t._v(" "),e("h3",{attrs:{id:"create-a-dedicated-image"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-dedicated-image"}},[t._v("#")]),t._v(" Create a dedicated image")]),t._v(" "),e("p",[t._v("In case we want to deploy a self-contained image, we can write a complete "),e("a",{attrs:{href:"Dockerfile"}},[e("code",[t._v("Dockerfile")])]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ontop/ontop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("endpoint\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /opt/ontop\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" input/university"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.ttl input/university"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.obda input/university"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.docker.properties input/ \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" jdbc/h2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("1.4.196.jar jdbc/\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 8080\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" java "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cp ./lib/*"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("./jdbc/* "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Dlogback.configurationFile=file"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("./log/logback.xml \\\n        it.unibz.inf.ontop.cli.Ontop endpoint \\\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ontology=input/university"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.ttl \\\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mapping=input/university"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.obda \\\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("properties=input/university"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.docker.properties \\\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cors"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("allowed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("origins=http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//yasgui.org \\\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("lazy "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if needed")]),t._v("\n")])])]),e("p",[t._v("Then, run the commands to build and run the Docker image:")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ docker build -t my-ontop-endpoint .\n$ docker run -it --rm --name my-running-ontop-endpoint -p 8080:8080 my-ontop-endpoint\n")])])]),e("h3",{attrs:{id:"use-docker-compose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#use-docker-compose"}},[t._v("#")]),t._v(" Use Docker-compose")]),t._v(" "),e("p",[t._v("Docker-compose allows setting up a number of containers together.\nFor example, the following "),e("a",{attrs:{href:"docker-compose.yml"}},[e("code",[t._v("docker-compose.yml")])]),t._v(" file creates a cluster consisting of an H2 database ("),e("code",[t._v("db")]),t._v(") and an Ontop SPARQL endpoint ("),e("code",[t._v("ontop")]),t._v(").")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.4'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("db")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" openjdk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jdk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./h2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/opt/h2\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-cp"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/opt/h2/bin/h2-1.4.196.jar"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org.h2.tools.Server"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-tcpAllowOthers"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8082:8082"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9082:9082"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ontop")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ontop/ontop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("endpoint\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ONTOP_ONTOLOGY_FILE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/ontop/input/university"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.ttl\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ONTOP_MAPPING_FILE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/ontop/input/university"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.obda\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ONTOP_PROPERTIES_FILE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/ontop/input/university"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.compose.properties\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ONTOP_PORTAL_FILE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/ontop/input/university"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.portal.toml\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ONTOP_CORS_ALLOWED_ORIGINS")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ONTOP_DEV_MODE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ONTOP_LAZY_INIT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/opt/ontop/input\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./jdbc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/opt/ontop/jdbc\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8080:8080"')]),t._v("\n")])])]),e("p",[t._v("Now we can simply start it:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ docker-compose up\n")])])]),e("p",[t._v("It exposes the following two ports for the browser:")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://localhost:8080",target:"_blank",rel:"noopener"}},[t._v("http://localhost:8080"),e("OutboundLink")],1),t._v(" H2 Web Console")]),t._v(" "),e("li",[e("a",{attrs:{href:"http://localhost:8082",target:"_blank",rel:"noopener"}},[t._v("http://localhost:8082"),e("OutboundLink")],1),t._v(" Ontop SPARQL endpoint")])])])}),[],!1,null,null,null);n.default=s.exports}}]);